//1
1;List the musician name, title of song which he played the album in which song has occurred.
select m.MName,s.Stitle,a.Atitle from MUSICIAN m,SONG s, ALBUM a,PERFORM p where m.SSN=p.SSN and s.AID=a.AID and s.SID=p.SID;

2;Retrieve name of musician who have not produced any album.
select m.Mname,m.SSN from MUSICIAN m where m.SSN not in(select m.ssn from MUSICIAN,ALBUM a where m.SSN=a.SSN);

3;List the details of songs which are performed by more than three musicians select s.* from MUSICIAN m, PERFORM p,SONG s where m.SSN=p.SSN and p.SID=s.SID group by p.SID having count(p.SID)>=3;

4;List the different instruments played by the musicians and the average number of musicians who play the instrument
select count(p.IID),i.IName,count(p.IID)/(Select count(*) from MUSICIAN) as Average from INSTRUMENT i,PLAY p where p.IID=i.IID group by p.IID;

5;Retrieve album title produced by the producer who plays guitar as well as float and has produced number of songs greater than the average songs produced by all producers
select a.Atitle from ALBUM a,PLAY p,INSTRUMENT i where a.SSN=p.SSN and p.IID=i.IID and i.Iname='Flute' and exists(select a.Atitle from ALBUM a,PLAY p,INSTRUMENT i where a.SSN=p.SSN and p.IID=i.IID and i.Iname='Guitar') and a.SSN in(select SSN from ALBUM where no_of_songs >=(select avg(no_of_songs) from ALBUM));

6; List the detail of musicians who can play all the instruments
select m.* from MUSICIAN m,PLAY p,INSTRUMENT i where m.SSN=p.SSN and p.IID=i.IID group by(p.SSN) having count(p.SSN)=(select count(*) from INSTRUMENT);
//2
1; List the detail of patients who are 20 years old and have been checked by eye specialist
select p.* from PATIENT p,DOCTOR d,EXAMINE e where d.DSSN=e.DSSN and p.PSSN=e.PSSN and d.DSpeciality='Opthalmologist' and p.PAge>20;

2;List the details of doctors who have given the prescription to more than 20 patient in the year 2022
select d.* from DOCTOR d, PRESCRIBE p where d.DSSN=p.DSSN and p.Date like "2022%" group by p.DSSN having count(p.DSSN)>4;

3; Retrieve the detail of doctor having Max experience
select d.* from DOCTOR d where d.DYOE=(select max(d.DYOE) from DOCTOR d);

4; List the detail of pharmaceutical company who supplied drugs to more than 10 pharmacies in the same city where companies located
select pc.* from PHARMACUETICAL_COMPANY pc,PHARMACY p,CONTRACT
c	where	pc.PCName=c.PCName	and	p.PhrName=c.PhrName	and p.PhrAddress=pc.PCAddress group by c.PCName having count(c.PCName>2);

5; list the detail of drugs supplied by only one pharmaceutical company
select d.MTrName from DRUG d, PHARMACUETICAL_COMPANY pc,MANUFACTURE	m	where	pc.PCName=m.PCName	and d.MTrName=m.MTrName group by m.MTrName having count(m.MTrName)=1

6; List the detail of drugs supplied by all company
select d.MTrName from DRUG d, PHARMACUETICAL_COMPANY pc,MANUFACTURE	m	where	pc.PCName=m.PCName	and d.MTrName=m.MTrName group by m.MTrName having count(m.MTrName)=(select count(*) from PHARMACUETICAL_COMPANY);
//3
1; List of the detail of distributor with most installation in domestic place
select v.*,count(v.tin) from vendor v, install i, user u where i.tin=v.tin and i.ohno=u.ohno and u.uuseage="Domestic" group by v.tin having count(v.tin)>=ALL(select count(v.tin) from vendor v, install i, user u where i.tin=v.tin and i.ohno=u.ohno and u.uuseage="Domestic" group by v.tin);

2; List of the place name with highest capacity final installed
select p.capacity,u.uaddress from user u, panel p ,install i where u.ohno=i.ohno and p.pv=i.pv and p.capacity=(select max(capacity) from panel);

3; Display the area where monocrystalline panel are installed.
select distinct u.uaddress from user u, panel p,install i where u.ohno=i.ohno and p.pv=i.pv and p.type="Monocrystalline";

4; For specific area display the total installation charges for both type of pv modules.
select uaddress, sum(i.icharge) from user u,install i where u.ohno=i.ohno group by u.uaddress;

5; List the detail of distributor and panel that is the oldest installation
select v.*,p.*,i.idate from vendor v,panel p,install i where v.tin=i.tin and p.pv=i.pv and i.idate in (select min(idate) from install);

6; Find the average sales of both type of panel in only commercial place.
select count(s.pv) as total_sales,count(s.pv)/(select count(*) from distribute) as avg from distribute s,panel p,user u,install i where i.pv=p.pv and i.ohno=u.ohno and s.pv=i.pv and u.uuseage="commercial";

//4th
db.createCollection('employee')
db.createCollection('department')
db.createCollection('project')

Inserting records into Collection Employee
db.employee.insertOne({
"ssn":101,
"name":"krupa",
'gender':'female',
"salary":900000,
"depid":201,
'qualification':['bca','mca'],
"designation":"senior software engineer",
"experience":9,
"dob":"09-08-1999",
'dependants':
[{'name':'gopal','relationship':'father'},
{'name':'usha','relationship':'mother'}],
'workson':[{'pno':301,'phour':5}]
});

db.employee.insertOne({
"ssn":102,
"name":"kiran",
'gender':'male',
"salary":9000,
"depid":201,
'qualification':['bsc','mca'],
"designation":"senior software engineer",
"experience":1,
"dob":"29-06-2002",
'dependants':
[{'name':'gajendra','relationship':'father'}],
'workson':[{'pno':301,'phour':1}]
});

db.employee.insertOne({
"ssn":103,
"name":"karishma",
'gender':'female',
"salary":23500,
"depid":201,
'qualification':['bca','mca'], 
"designation":"senior software engineer",
"experience":5,
"dob":"13-04-1997",
'dependants':
[{'name':'varun','relationship':'fiance'}],
'workson':[{'pno':301,'phour':9},{'pno':302,'phour':3}]
});

db.employee.insertOne({
"ssn":104,
"name":"jaya",
'gender':'female',
"salary":103400,
"depid":202,
'qualification':['bsc'],
"designation":"junior software engineer",
"experience":10,
"dob":"29-06-1092",
'dependants':
[{'name':'harish','relationship':'son'}],
'workson':[{'pno':302,'phour':6}]
});

db.employee.insertOne({
"ssn":105,
"name":"ramesh",
'gender':'male',
"salary":73500,
"depid":203,
'qualification':['bcs','mca'],
"designation":"senior software engineer",
"experience":9,
"dob":"11-03-1993",
'dependants':
[{'name':'varsha','relationship':'fiance'}],
'workson':[{'pno':301,'phour':2},{'pno':302,'phour':3}]
});

Inserting records into Collection Department
db.department.insertOne({
'depid':201,
'depname':'finance',
'depmngr':101})

db.department.insertOne({
'depid':202,
'depname':'operations',
'depmngr':104})

db.department.insertOne({
'depid':203,
'depname':'customer service',
'depmngr':105})

Inserting records into Collection Project
db.project.insertOne({
'pid':301,
'pname':'Profit Report',
'depid':201,
'pstart':'2022-04-11',
'pend':'2022-05-01'})

db.project.insertOne({
'pid':302,
'pname':'Customer Satisfaction Report',
'depid':201,
'pstart':'2022-01-19'})

Queries
1)Insert at least 5 values

2) Sort the employee list by ssn
Ascending : db.employee.find().sort({"ssn":1})
descending : db.employee.find().sort({"ssn":-1})

3)List the employee who are working in finance department
Shortcut method i.e. finding by Dep ID : db.employee.find({"depid":201})

4)Find employee who draws max salary
Works for both when more than 2 employee have same max salary
var sal=db.employee.distinct("salary").sort()			//Created an ascending array of distinct salaries
db.employee.find({"salary":{$eq:sal[sal.length-1]}})		//From array selected max (last) value

5)Update the record of employee who has worked on max projects as “Employee of the Year”
db.employee.update({
_id:db.employee.aggregate
([{$project:{count:{$size:'$workson'}}},
{$sort:{'count':-1}}]).toArray()[0]._id},
{$set:{'title':'Employee of the year'}})

6)Delete Employee with Minimum Experience
db.employee.deleteOne({
experience:db.employee.aggregate
([{$group:{_id:null,
MinExp:{$min:'$experience'}}}]).toArray()[0].MinExp})

